name: CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    lint:
        name: Lint
        runs-on: ubuntu-latest
        strategy:
            matrix:
                module:
                    - services/analyzer
                    - services/gateway
                    - services/processor
                    - pkg
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: ${{ matrix.module }}/go.mod
                  cache-dependency-path: ${{ matrix.module }}/go.sum

            - name: Run golangci-lint
              uses: golangci/golangci-lint-action@v8
              with:
                  version: latest
                  working-directory: ${{ matrix.module }}
                  args: --timeout=5m

    test:
        name: Test
        runs-on: ubuntu-latest
        strategy:
            matrix:
                module:
                    - services/analyzer
                    - services/gateway
                    - services/processor
                    - pkg
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: ${{ matrix.module }}/go.mod
                  cache-dependency-path: ${{ matrix.module }}/go.sum

            - name: Download dependencies
              working-directory: ${{ matrix.module }}
              run: go mod download

            - name: Run tests
              working-directory: ${{ matrix.module }}
              run: go test -race -coverprofile=coverage.out ./...

            - name: Upload coverage reports
              uses: codecov/codecov-action@v4
              with:
                  file: ${{ matrix.module }}/coverage.out
                  flags: ${{ matrix.module }}
                  fail_ci_if_error: false

    build:
        name: Build
        runs-on: ubuntu-latest
        needs: [lint, test]
        strategy:
            matrix:
                service:
                    - services/analyzer
                    - services/gateway
                    - services/processor
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: ${{ matrix.service }}/go.mod
                  cache-dependency-path: ${{ matrix.service }}/go.sum

            - name: Build service
              working-directory: ${{ matrix.service }}
              run: go build -v ./cmd/...

    security:
        name: Security Scan
        runs-on: ubuntu-latest
        strategy:
            matrix:
                module:
                    - services/analyzer
                    - services/gateway
                    - services/processor
                    - pkg
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: ${{ matrix.module }}/go.mod

            - name: Install Gosec
              run: go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest

            - name: Run Gosec Security Scanner
              working-directory: ${{ matrix.module }}
              run: gosec -exclude-dir=vendor ./...
