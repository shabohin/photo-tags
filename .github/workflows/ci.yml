# .github/workflows/ci.yml
name: CI

on:
    push:
        branches: ['**']
    pull_request:
        branches: [main]

env:
  GO_VERSION: '1.24'
  GOLANGCI_LINT_VERSION: 'v1.55.2'

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: ${{ env.GO_VERSION }}
                  cache: true

            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cache/go-build
                      ~/go/pkg/mod
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Download dependencies
              run: |
                  cd services/gateway && go mod download
                  cd ../analyzer && go mod download  
                  cd ../processor && go mod download
                  cd ../../pkg && go mod download

            - name: Test Gateway
              run: cd services/gateway && go test -race -v -coverprofile=coverage.out ./...

            - name: Test Analyzer
              run: cd services/analyzer && go test -race -v -coverprofile=coverage.out ./...

            - name: Test Processor
              run: cd services/processor && go test -race -v -coverprofile=coverage.out ./...

            - name: Test Shared Packages
              run: cd pkg && go test -race -v -coverprofile=coverage.out ./...

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v4
              with:
                  files: |
                      ./services/gateway/coverage.out
                      ./services/analyzer/coverage.out
                      ./services/processor/coverage.out
                      ./pkg/coverage.out
                  fail_ci_if_error: false
                  verbose: true

    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: golangci-lint Gateway
              uses: golangci/golangci-lint-action@v4
              with:
                  version: ${{ env.GOLANGCI_LINT_VERSION }}
                  args: --timeout=5m --config=../.golangci.yml
                  working-directory: services/gateway

            - name: golangci-lint Analyzer
              uses: golangci/golangci-lint-action@v4
              with:
                  version: ${{ env.GOLANGCI_LINT_VERSION }}
                  args: --timeout=5m --config=../.golangci.yml
                  working-directory: services/analyzer

            - name: golangci-lint Processor
              uses: golangci/golangci-lint-action@v4
              with:
                  version: ${{ env.GOLANGCI_LINT_VERSION }}
                  args: --timeout=5m --config=../.golangci.yml
                  working-directory: services/processor

            - name: golangci-lint Shared Packages
              uses: golangci/golangci-lint-action@v4
              with:
                  version: ${{ env.GOLANGCI_LINT_VERSION }}
                  args: --timeout=5m --config=.golangci.yml
                  working-directory: pkg

    security:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            
            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: ${{ env.GO_VERSION }}

            - name: Run Gosec Security Scanner
              uses: securecodewarrior/github-action-gosec@master
              with:
                  args: './...'
