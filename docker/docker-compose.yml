version: '3.8'

networks:
  photo-tags-network:
    driver: bridge

services:
    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq:3-management-alpine
        ports:
            - '9002:5672'
            - '9100:15672'
        environment:
            - RABBITMQ_DEFAULT_USER=user
            - RABBITMQ_DEFAULT_PASS=password
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
        healthcheck:
            test: ['CMD', 'rabbitmq-diagnostics', 'ping']
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - photo-tags-network

    minio:
        container_name: minio
        image: minio/minio
        ports:
            - '9000:9000'
            - '9001:9001'
        environment:
            MINIO_ROOT_USER: minioadmin
            MINIO_ROOT_PASSWORD: minioadmin
        volumes:
            - minio_data:/data
        command: server /data --console-address ":9001"
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - photo-tags-network

    gateway:
        container_name: gateway
        build:
            context: ..
            dockerfile: docker/Dockerfile.service
            args:
                SERVICE: gateway
        ports:
            - '9003:9003'
        depends_on:
            rabbitmq:
                condition: service_healthy
            minio:
                condition: service_healthy
        env_file: .env
        environment:
            - RABBITMQ_URL=amqp://user:password@rabbitmq:5672/
            - MINIO_ENDPOINT=minio:9000
            - MINIO_ACCESS_KEY=minioadmin
            - MINIO_SECRET_KEY=minioadmin
            - SERVER_PORT=9003
            - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
        networks:
            - photo-tags-network

    analyzer:
        container_name: analyzer
        build:
            context: ..
            dockerfile: docker/Dockerfile.service
            args:
                SERVICE: analyzer
        depends_on:
            rabbitmq:
                condition: service_healthy
            minio:
                condition: service_healthy
        env_file: .env
        environment:
            - RABBITMQ_URL=amqp://user:password@rabbitmq:5672/
            - MINIO_ENDPOINT=minio:9000
            - MINIO_ACCESS_KEY=minioadmin
            - MINIO_SECRET_KEY=minioadmin
            - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
            - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
        networks:
            - photo-tags-network

    processor:
        container_name: processor
        build:
            context: ..
            dockerfile: docker/Dockerfile.service
            args:
                SERVICE: processor
        depends_on:
            rabbitmq:
                condition: service_healthy
            minio:
                condition: service_healthy
        environment:
            - RABBITMQ_URL=amqp://user:password@rabbitmq:5672/
            - MINIO_ENDPOINT=minio:9000
            - MINIO_ACCESS_KEY=minioadmin
            - MINIO_SECRET_KEY=minioadmin
            - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
        networks:
            - photo-tags-network

volumes:
    rabbitmq_data:
    minio_data:
